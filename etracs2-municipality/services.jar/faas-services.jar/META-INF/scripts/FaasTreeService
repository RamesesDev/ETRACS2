import com.rameses.annotations.*
import com.rameses.eserver.*;
import java.text.SimpleDateFormat;

public class FaasTreeService
{
	
	@PersistenceContext("etracs")
	def em;
	
	@ProxyMethod
	public def build( faas, rpu ) {
		def tree = em.sqlContext.createNamedQuery( "faas:getTreeRpuById" )
						.setParameter( "objid", rpu.objid ).singleResult;
						
		faas.rpu.rpuType = "rputree:tree";
		def rpuInfo = faas.rpu.info;
		
		buildTreeInfo( rpuInfo, tree );
		
		rpuInfo.landPlantDetails = buildPlantDetails( tree );
		
		return faas;
	}
	
	private def buildTreeInfo( rpuInfo, tree ) {
		
		rpuInfo.totalBearing = tree.totalBearing;
		rpuInfo.totalNonBearing = tree.totalNonBearing;
		
	}
	
	private def buildPlantDetails( tree ) {
		def plantDetails = em.sqlContext.createNamedQuery( "faas:getLandPlantDetailByRpuId" )
							.setParameter( "rpuId", tree.objid ).resultList;
		def details = [];
		plantDetails.each { detail ->
			details += [
				objid				: detail.objid,
				bearing				: detail.bearing,
				nonBearing			: detail.nonBearing,
				nonBearingAge		: detail.nonBearingAge,
				baseValue			: detail.baseValue,
				unitValue			: detail.unitValue,
				treeId				: detail.treeId,
				treeCode			: detail.treeCode,
				treeTitle			: detail.treeTitle,
				treeUnitValueId		: detail.treeUnitValueId,
				treeUnitValueCode	: detail.treeUnitValueCode,
				treeUnitValueTitle	: detail.treeUnitValueTitle,
				treeUnitId			: detail.treeUnitId,
				treeAssessLevelId	: detail.treeAssessLevelId,
				treeAssessLevelCode	: detail.treeAssessLevelCode,
				treeAssessLevelTitle: detail.treeAssessLevelTitle,
				marketValue			: detail.marketValue,
				adjMarketValue		: detail.adjMarketValue,
				assessLevel			: detail.assessLevel,
				assessValue			: detail.assessValue
			];
		}
		
		return details;
	}


}	

