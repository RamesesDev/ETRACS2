import com.rameses.annotations.*;
import com.rameses.invoker.client.*;
import com.rameses.etracs1.invoker.*;

class NewService {

	@ProxyMethod
	public void test() {
	
		print "ENTERING TEST";
	
		def o = new HttpServiceInvoker("10.0.0.111:8080", null);
		
		print "O == " + o;
	
		def a = o.create("TestService");
		print "A == " + a;
		
		def b = a.invoke("getData", ["HELLO"]);
	
		print "RESULT FROM OLD SERVER == " + b;
	
	}
	
	
	
	@ProxyMethod
	public void test2() {
	
		def o = new DynamicHttpInvoker("10.0.0.118:8080", "mlglobal");
	
		def a = o.create("TestService").invoke("test", ["HELLO"]);
		
		print "A == " + a;
	}

}
