<workunit>
    <invokers>
        <invoker type="collection" caption="Large Cattle Transfer" afid="52" appcode="cattle_transfer" permission="collection_cattletransfer.create"/>
        <invoker type="inquiry:tc:cattle_transfer" action="initInquiry" permission="collection_cattletransfer.inquiry"/>
        <invoker type="tc:cattle_transfer" action="init" caption="Large Cattle Transfer" afid="52"  permission="collection_cattletransfer.create"/>
        
        <invoker type="formActions" action="doNew" caption="New" mnemonic="n" shortcut="ctrl N" visibleWhen="#{mode == 'view' and txnmode != null}" permission="collection_cattletransfer.create" icon="images/add.png"/>
        <invoker type="formActions" action="back" caption="Back" mnemonic="b"  immediate="true" visibleWhen="#{mode == 'create'}" icon="images/back.png"/>
        <invoker type="formActions" action="create" caption="Save" mnemonic="s" shortcut="ctrl S" visibleWhen="#{mode == 'create'}" icon="images/save.png"/>
        <invoker type="formActions" action="update" caption="Save" mnemonic="s" shortcut="ctrl S" visibleWhen="#{mode == 'edit'}" icon="images/save.png"/>
        <invoker type="formActions" action="doPrint" caption="Print" mnemonic="p" shortcut="ctrl P" visibleWhen="#{mode == 'view'}" permission="collection_cattletransfer.print"/>
        <invoker type="formActions" action="doVoid" caption="Void" mnemonic="v" visibleWhen="#{mode == 'view'}" permission="collection_cattletransfer.void" icon="images/doc-void.png"/>
        
        <invoker type="receipt.actions:tc:cattle_transfer" action="edit" caption="Edit" mnemonic="e" shortcut="ctrl E" target="popup" permission="collection_cattletransfer.edit" icon="images/doc-edit.png"/>
        <invoker type="receipt.actions:tc:cattle_transfer" action="doPrint" caption="Print" mnemonic="p" shortcut="ctrl P" permission="collection_cattletransfer.print"/>
        <invoker type="receipt.actions:tc:cattle_transfer" action="doVoid" caption="Void" mnemonic="v" permission="collection_cattletransfer.void" icon="images/doc-void.png"/>
    </invokers>
    <code>
<![CDATA[

    import com.rameses.rcp.common.*;
    import com.rameses.rcp.annotations.*;
    import com.rameses.osiris2.client.*;
    import etracs2.groovy.*
    import etracs2.tc.groovy.*

    class CattleTransferCollectionController extends AbstractCollectionController
    {
        @Binding
        def binding
        
        @Service('ReceiptService')
        def svc
        
        @Service('IncomeAcctService')
        def acctSvc
        
        @Service('LargeCattleHtmlService')
        def htmlSvc
        
        @Service('DateService')
        def dateSvc
        
        @Service('CollectionSettingService')
        def collSvc
        
        @Service('ReportParameterService')
        def svcParams
        
        @Service('NumberService')
        def numSvc
        
        @Service('Var')
        def VAR
        
        def getParameters() { 
            return svcParams.getStandardParameter( OsirisContext.env.USERNAME ) + [
                                TXNDATE     : dateSvc.parse("yyyy-MM-dd", entity.info.txndate),
                                ISSUEDATE   : dateSvc.parse("yyyy-MM-dd", entity.issuedate),
                                AMTINWORDS  : numSvc.doubleToWords(entity.price)
                            ]; 
        }
        
        def getService() { return svc }
        def getHtmlService() { return htmlSvc }
        def getCollectionTitle() { return 'Large Cattle Transfer' }

        
        void init() {
            super.init()
            entity.doctype = 'CATTLE_TRANSFER'
            entity.info?.paidbyaddress = VAR.lgu_name
            entity.citymuni = VAR.lgu_name
            entity.province = VAR.parent_lgu_name
            entity.issuedcitymuni = VAR.lgu_name
            entity.issuedprovince = VAR.parent_lgu_name 
            addReceiptItem()
            addDefaultCashPayment()
        }
        
        def getHtml() {
            return htmlSvc.getTransferHtml( entity.objid )
        }
        
        def create() {
            validate()
            return super.create()
        }
        
        def update() {
            validate()
            return super.update()
        }
        
        def getReportName() {
            return 'receipt/af52'
        }
        void addReceiptItem() {
            def cs = collSvc.open()
            def ia = acctSvc.open( cs.info.lctacctid )
            def item = [
                acctid    : ia.objid,
                acctno    : ia.acctno,
                accttitle : ia.accttitle,
                fundid    : ia.fundid,
                fundname  : ia.fundname,
                amount    : cs.info.lctamount,
            ]
            entity.items.add( item )
            entity.info.amount = item.amount
        }
        
        void addDefaultCashPayment() {
            entity.payments.add( [
                paytype     : 'CASH',
                particulars : 'CASH',
                amount      : entity.info.amount,
            ])
            entity.info.totalpayment = entity.info.amount
            entity.info.cash = entity.info.amount
            reinitializePaymentSummary()
        }
        
        void validate() {
            validateAge()
            validateIssueDate()
        }
        
        void validateAge() {
            if( entity.age <= 0 ) throw new Exception('Age must be greater than zero.')
        }
        
        void validateIssueDate() {
            if( entity.issuedate ) {
                Date dt = java.sql.Date.valueOf(entity.issuedate)
                if( dt > dateSvc.serverDate ) {
                    throw new Exception('Issue date must be less than or equal to today.')
                }
            }
        }
        
        List getSexList() {
            return ['MALE','FEMALE']
        }
        
    }
]]>        
    </code>
    <pages>
        <page template="etracs2.tc.collection.LargeCattleTransferCollectionPage"/>
        <page name="view" template="etracs2.tc.collection.CollectionViewPage"/>
        <page name="html" template="etracs2.tc.HtmlPage"/>
    </pages>
</workunit>