<workunit>
    <invokers>
        <invoker type="abstractofcollection:report" action="view" caption="Monthly"/>
        
        <invoker type="formActions" action="close"  immediate="true" caption="Back" mnemonic="c" icon="images/cancel.png"/>
        <invoker type="formActions" action="viewReport" caption="View" visibleWhen="#{mode == 'init'}" mnemonic="v" icon="images/doc-view.png"/>
    </invokers>
    <code>
        <![CDATA[

        import com.rameses.rcp.common.*;
        import com.rameses.rcp.annotations.*;
        import com.rameses.osiris2.client.*;
        import com.rameses.osiris2.reports.*;
        import java.rmi.server.UID;

        class AbstractOfCollectionReportMonthlyController {
        
            @Service("TCReportService")
            def svc;
            
            @Service("ReportParameterService")
            def paramsvc;
            
            @Service("DateService")
            def dtsvc;

            def param = [:];
            
            def mode = 'init';
            
            def mos;
            
            def report = [
                getReportName : { return 'AbstractOfCollection' },
                getReportData : { return svc.generateAbstractOfCollectionMonthly( param ) }, 
                getParameters : { 
                    def params = paramsvc.getStandardParameter( OsirisContext.env.USERNAME );
                    params.SUBTITLE = "For " + param.month.caption + ", " + param.year;
                    return params;
                }
            ] as ServerReportModel;
            
            def close() {
                return '_close';
            }
            
            def view() {
                def map = dtsvc.parseCurrentDate();
                param.year = map.year;
                param.month = getMonths().find{ mo -> mo.index == map.month };
                mode = 'init';
                return 'init';
            }
            
            def viewReport() {
                mode = 'view';
                report.viewReport();
                return 'report';
            }
            
            def getMonths() {
                if (!mos) mos = dtsvc.getMonths();
                return mos;
            }

        }

        ]]>        
        
    </code>
    <pages>
        <page name="init" template="etracs2.tc.report.abstractofcollection.MonthlyInitPage" />
        <page name="report" template="etracs2.tc.PreviewPage" />
    </pages>
</workunit>