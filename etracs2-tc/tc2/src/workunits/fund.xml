<workunit>
    <invokers>
        <invoker type="home.action" action="init" caption="Fund" permission="fund.viewlist" icon="images/folder.png" target="window" index="3"/>
        <invoker folderid="/menu/tc/master" action="init" caption="Fund" permission="fund.viewlist" target="window" index="3"/>
        
        <invoker type="formActions" action="create" shortcut="ctrl N" visibleWhen="#{mode == 'view'}" immediate="true" caption="New" mnemonic="n" icon="images/doc-new.png" permission="fund.create"/>
        <invoker type="formActions" action="edit" shortcut="ctrl E" visibleWhen="#{mode == 'view' and entity.objid != null and entity.docstate == 'DRAFT'}" immediate="true" caption="Edit" mnemonic="e" icon="images/edit.png" permission="fund.edit"/>
        <invoker type="formActions" action="save" shortcut="ctrl S" visibleWhen="#{mode != 'view'}" caption="Save" mnemonic="s" icon="images/save.png"/>
        <invoker type="formActions" action="cancel" visibleWhen="#{mode != 'view'}"  immediate="true" caption="Cancel" mnemonic="c" icon="images/doc-cancel.png"/>
        <invoker type="formActions" action="delete" shortcut="ctrl D" visibleWhen="#{mode == 'view' and entity.objid != null}" immediate="true" caption="Delete" mnemonic="d" icon="images/doc-delete.png" permission="fund.delete"/>
        <invoker type="formActions" action="approve" shortcut="ctrl A" visibleWhen="#{mode == 'view' and entity.objid != null and entity.docstate == 'DRAFT'}" immediate="true" caption="Approve" mnemonic="a" icon="images/doc-approve.png" permission="fund.approve"/>
    </invokers>
    <code>
<![CDATA[

import com.rameses.rcp.common.*;
import com.rameses.rcp.annotations.*;
import com.rameses.osiris2.client.*;

class FundController extends etracs2.groovy.CRUDController 
{
    @Service("FundService")
    def svc;
    
    def getService() { return svc; }
    def getCreateFocusComponent() { return "entity.fund"; }
    def getEditFocusComponent() { return "entity.fund"; }
    def getListHandler() { return listHandler; }
    
    void init(){
        super.init();
        if(!list) list = svc.init();
        list = getList( searchText, null );
    }
    
    def getFundList(){
        return ['GENERAL', 'SEF', 'TRUST'];
    }
    
    def getList( searchText, params ) {
        if( ! params ) params = [_start:0, _limit:25];
        return svc.getList( searchText, params );
    }
    
    def createEntity() {
        return [
            docstate        : 'DRAFT'
        ];
    }
    
    
    def listHandler = [
        getRows    : { return 20; },
        getColumns : {
            return [
                new Column(name:"fund", caption:"Fund"),
                new Column(name:"subfund", caption:"Sub Fund"),
                new Column(name:"fundname", caption:"Fund Name"),
                new Column(name:"docstate", caption:"State"),
            ];
        },
        fetchList : { 
            return list; 
        },
    ] as SubListModel;

}

]]>        
        
    </code>
    <pages>
        <page template="etracs2.tc.account.FundPage"/>
    </pages>
</workunit>