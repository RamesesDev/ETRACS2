import com.rameses.annotations.*
import com.rameses.common.*

class TreasuryReportService
{
	@PersistenceContext('main')
	def em
	
	def parsetime = { year, qtr, month ->
		def sb = new StringBuffer();
		sb.append( year );
		if( qtr ) 
		if( month ){
			if( !qtr ){
				if( month <= 3 )  sb.append( 1 );
				if( month <= 6 )  sb.append( 2 );
				if( month <= 9 )  sb.append( 3 );
				if( month <= 12 ) sb.append( 4 );
			}
			if ( month > 9 )
				sb.append( "" + month );
			else
				sb.append( "0" + month );
		} else if ( qtr)
			sb.append( qtr + "" );
		sb.append("%");
		return sb;
	}
	
	@ProxyMethod
	public def generateStatementOfRevenue( def year, def qtr, def month, def fundid ){
		def dtime = parsetime( year, qtr, month );
		def list = [];
		em.sqlContext.createNamedQuery("treasuryreport:getChartList").resultList.each{
            list.addAll( em.sqlContext.createNamedQuery("treasuryreport:getRevenueByGLAccount$it.acctcode")
			               .setParameters( [fundid:fundid, liqtimestamp:dtime] )
					       .resultList );
		};
		if (!list)
			throw new IllegalStateException( "No records found." );
		return list;
	}
	
	@ProxyMethod
	public def generateStatementOfRevenueExpanded( def year, def qtr, def month, def fundid ){
		def dtime = parsetime( year, qtr, month );
		def list = [];
		em.sqlContext.createNamedQuery("treasuryreport:getChartList").resultList.each{
			list.addAll( em.sqlContext.createNamedQuery("treasuryreport:getRevenueByIncomeAccount$it.acctcode")
  						   .setParameters( [fundid:fundid, liqtimestamp:dtime] )
						   .resultList );
		};
		if (!list)
			throw new IllegalStateException( "No records found." );
		return list;
	}
	
	@ProxyMethod
	public def getFundList(){
		return em.sqlContext.createNamedQuery("treasuryreport:getFundList").resultList;
	}
	
}
