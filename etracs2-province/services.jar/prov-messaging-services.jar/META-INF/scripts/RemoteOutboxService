import com.rameses.annotations.*;
import com.rameses.common.*


class RemoteOutboxService
{
	@PersistenceContext('main')
	def em
	
	def OUTBOX_SCHEMA = 'message:outbox'
	def PROCESSEDOUTBOX_SCHEMA = 'message:processedoutbox'
	
	@ProxyMethod
	public def fetchMessage( params ) {
		println 'Fetching messages for LGU ' + params.lguindexno
		def msg = em.sqlContext.createNamedQuery('message:getOutboxMessageId').setParameter('tolguindex', params.lguindexno ).setMaxResults(1).singleResult
		if( msg ) {
			msg = em.read(OUTBOX_SCHEMA, msg)
		}
		return msg 
	}
	
	@ProxyMethod
	public def fetchSuccess( msgid ) {
		def msg = em.read( OUTBOX_SCHEMA, [objid:msgid] )
		if( msg ) {
			em.create(PROCESSEDOUTBOX_SCHEMA, msg )
			em.delete(OUTBOX_SCHEMA, msg )
		}
		return [status:'ok', msg:'']
	}
	
	
}