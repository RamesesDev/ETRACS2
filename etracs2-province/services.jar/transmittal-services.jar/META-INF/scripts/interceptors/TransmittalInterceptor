import com.rameses.annotations.*;

class TransmittalInterceptor 
{
	@Service("LogService")
	def logService 
	
	@Service("TransmittalService")
	def transmittalService;
	
	
	@After(pattern="TransmittalService.create.*") 
	public void interceptCreate( evt ) {
		logService.log("CREATE", "TRANSMITTAL", evt.result.objid);
	}
	
	@After(pattern="TransmittalService.submit.*") 
	public void interceiptSubmit( evt ) {
		logService.log("SUBMIT", "TRANSMITTAL", evt.result.objid);
	}
	
	
	@After(pattern="FAASService.submit") 
	public void interceptFaasSubmit( evt ) {
		def faas = evt.result;
		transmittalService.updateItemStateToForApproval(faas.transmittalId, faas.objid);
	}
	
	@After(pattern="FAASService.approve") 
	public void interceptFaasApprove( evt ) {
		def faas = evt.result;
		transmittalService.updateItemStateToCurrent(faas.transmittalId, faas.objid);
	}
	
	@After(pattern="FAASService.disapprove") 
	public void interceptFaasDisapprove( evt ) {
		def faas = evt.result;
		transmittalService.disapproveTransmittalItem(faas.transmittalId, faas.objid, faas.state, faas.remarks);
	}
	
	
}