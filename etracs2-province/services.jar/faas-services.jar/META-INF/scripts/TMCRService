import com.rameses.annotations.*;

class TMCRService
{
	@PersistenceContext("etracs")
	def em;
		
	@ProxyMethod
	public void delete( objid ) {
		em.sqlContext.createNamedExecutor("tmcr:deleteById").setParameters([objid:objid]).execute();
	}
	
	@ProxyMethod
	public void post( def faas ) {
		def rpInfo = faas.rp.info;
		def rpuInfo = faas.rpu.info;
		
		def tmcr = [
			objid         : faas.objid, 
			schemaName    : "tmcr:tmcr",
			schemaVersion : "1.0",
			state         : faas.state,
			rpuId         : faas.rpuId,
			rpId          : faas.rpId,
			provCity      : rpInfo.provCity,
			provCityIndex : rpInfo.provCityIndex,
			muniDistrict  : rpInfo.muniDistrict,
			muniDistrictIndex :rpInfo.muniDistrictIndex,
			barangay      : rpInfo.barangay,
			barangayIndex : rpInfo.brgyIndex,
			sectionNo     : rpInfo.sectionNo,
			tdNo          : faas.info.tdNo,
			issueDate     : faas.info.issueDate,
			cadastralLotNo: rpInfo.cadastralLotNo,
			declarant     : faas.info.taxpayer.taxpayerName,
			address       : faas.info.taxpayer.taxpayerAddress,
			surveyNo      : rpInfo.surveyNo,
			titleNo       : faas.info.title?.titleNo,
			kind          : rpuInfo.type,
			class         : rpuInfo.classCode,
			areaSqm       : rpuInfo.areaSqm,
			areaHec       : rpuInfo.areaHec,
			marketValue   : rpuInfo.totalAMV,
			assessedValue : rpuInfo.totalAV,
			remarks       : faas.state,
		];
		
		em.validate("tmcr:tmcr", tmcr );
		em.create("tmcr:tmcr", tmcr);
	}
}
