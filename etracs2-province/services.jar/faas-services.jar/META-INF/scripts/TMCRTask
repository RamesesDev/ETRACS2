import com.rameses.annotations.*;

class TMCRTask 
{
	@PersistenceContext("etracs")
	def em;
	
	@Service("FAASService")
	def faasService;
	
	@Service("TMCRService")
	def tmcrService;
	
	@Service("LogService")
	def logService;
	
	@Service("DateService")
	def dateService;
	
	
	@ProxyMethod
	public def post( task ) {	
		//task is invoke every 5m: process items behind by 5 minutes
		def behindBy = "-10m";
		def startDate = dateService.add( task.currentdate, behindBy ); 
		def endDate = task.currentdate;

		try {
			def faasList = em.sqlContext.createNamedQuery("tmcr:findUnpostedFAASToTMCR")
										.setParameters([startDate:startDate, endDate:endDate])
										.resultList;
			faasList.each { 
				def faas = faasService.open( it.objid );
				tmcrService.delete( faas.objid );
				tmcrService.post( faas );
				logService.log("GENERATE", "TMCR", faas.objid);
			}
		}
		catch( e ) {
			println "=========================";
			println e.message;
		}
        return true;
	}
	
	
}