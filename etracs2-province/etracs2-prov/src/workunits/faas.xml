<workunit>
    <invokers>
        <invoker type="faas:open" action="open" target="window" caption="FAAS Information"/>
        
        <invoker type="formActions" action="submit" permission="faas.submit" tooltip="Submit For Approval" mnemonic="s" visibleWhen="#{faas.state == 'PROVAPPROVAL'}" icon="images/submit24.png" />
        <invoker type="formActions" action="approve" permission="faas.approve" tooltip="Approve"  mnemonic="a" visibleWhen="#{faas.state == 'FORAPPROVAL'}" icon="images/approve24.png" />
        <invoker type="formActions" action="doDisapprove" permission="faas.disapprove" tooltip="Disapprove" mnemonic="d" visibleWhen="#{faas.state == 'PROVAPPROVAL' || faas.state == 'FORAPPROVAL'}" icon="images/disapprove24.png"/>
        <invoker type="formActions" action="doReturn" permission="faas.return" tooltip="Return to Reviewer" mnemonic="r" visibleWhen="#{faas.state == 'FORAPPROVAL'}" icon="images/return24.png"/>
        
        <invoker type="formActions" action="assignPin" permission="faas.assignpin" caption="Assign New PIN" mnemonic="p" visibleWhen="#{faas.state == 'FORAPPROVAL' and faas.rpu.info.type == 'LAND' and faas.info.txnType == 'ND'}" />
        <invoker type="formActions" action="exchangePin" permission="faas.exchangepin" caption="Exchange PIN" mnemonic="x" visibleWhen="#{faas.state == 'FORAPPROVAL' and faas.rpu.info.type == 'LAND' and faas.info.txnType == 'ND'}" />
    </invokers>
    
    <code>
        <![CDATA[
        
        import com.rameses.rcp.common.*;
        import com.rameses.rcp.annotations.*;
        import com.rameses.osiris2.client.*;
        
        public class FAASController 
        {
            @Service("FAASService")
            def faasService;
            
            @Service("FAASHtmlService")
            def htmlService;
                    
            @Binding
            def binding;
            
            def faasId;
            def faas;
            def attachment;
            def listRefreshHandler;
            def remarks;
            def title = "FAAS Information";
            
            def open() {
                faas = faasService.open( faasId );
            }
            
            public void submit() {
                if( MsgBox.confirm("Submit FAAS?") ) {
                    faas = faasService.submit( faasId );
                    refreshList();
                }
            }
            
            public def approve() {
                if( MsgBox.confirm("Approve FAAS?") ) {
                    faas = faasService.approve( faasId );
                    refreshList();
                    return "_close";
                }
            }
            
            public def doDisapprove() {
                return InvokerUtil.lookupOpener("message_popup", [
                    caption:"Please provide a reason for disapproval.",
                    acceptHandler:{ msg -> 
                        faas = faasService.disapprove( faasId, msg );
                        binding.refresh("formActions");
                        refreshList();
                    }
                ]);
            }
            
            public def doReturn() {
                return InvokerUtil.lookupOpener("message_popup", [ 
                    caption:"Please provide reason for return.",
                    acceptHandler:{ msg ->
                        faas = faasService.returnDoc( faasId, msg );
                        binding.refresh("formActions");
                        refreshList();
                    }
                ]);
            }
            
            public def assignPin() {
                return InvokerUtil.lookupOpener("faas:assignpin", [
                    faas:faas,
                    acceptHandler: { key, section, newSeries, oldSeries ->
                        faas = faasService.assignPin( faas, key, section, newSeries, oldSeries );
                        refreshList();
                        binding.refresh("html");
                    }
                ]);
            }
            
            public def exchangePin() {
                return InvokerUtil.lookupOpener("faas:exchangepin", [
                    faas:faas,
                    exchangeHandler: { fromFaasId, toFaasId ->
                        faas = faasService.exchangePin( fromFaasId, toFaasId );
                        refreshList();
                        binding.refresh("html");
                    }
                ]);
            }
            
            public def getHtml() {
                return htmlService.getHtml( faasId );
            }
            
            public def showAttachment( params ) {
                def data = params.split("~~");
                def opener = InvokerUtil.lookupOpener("file:download", [fileName:data[2]] );
                opener.caption = "Attachment: " + data[1];
                return opener;
            }
            
            private void refreshList() {
                if( listRefreshHandler ) {
                    listRefreshHandler();
                }
            }
        }
        
        ]]>
        
    </code>
    
    <pages>
        <page template="etracs2.prov.faas.FAASPage"/>
    </pages>
</workunit>