<workunit>
    <invokers>
        <invoker type="bp.new" action="init" caption="Business Application" target="window"/>
        <invoker folderid="/menu/bp/txn" action="initNew" caption="New Business" permission="bplicensing.newtransaction"/>
        <invoker folderid="/menu/bp/txn" action="initRenew" caption="Renew Business" permission="bplicensing.renewtransaction"/>
        <invoker folderid="/menu/bp/txn" action="initAddline" caption="Add Line Of Business" permission="bplicensing.addlobtransaction"/>
        <invoker folderid="/menu/bp/txn" action="initRetire" caption="Retire Busines" permission="bplicensing.retiretransaction"/>
        <invoker folderid="/menu/bp/txn" action="initCaptureNew"   caption="New Busiess (Capture)" permission="bplicensing.capturenewtransaction"/>
        <invoker folderid="/menu/bp/txn" action="initCaptureRenew" caption="Renew Business (CAPTURE)" permission="bplicensing.capturerenewtransaction"/>
        <invoker type="formActions" action="next" caption="Next" mnemonic="n" icon="images/next24.png"/>
    </invokers>
    <code>
<![CDATA[

import com.rameses.rcp.common.*;
import com.rameses.rcp.annotations.*;
import com.rameses.osiris2.client.*;

class BusinessApplication
{
    @Binding
    def binding;
    
    @Service('BPEnum')
    def enumSvc;
    
    @Service("BPApplicationService")
    def svc;
    
    def app = [:];
    def application = [
        docstate:'DRAFT',
        info:[taxpayername:'',taxpayeraddress:''],
        lobs: []
    ];
    
    def typeList;
    def modeList;

    def initAddline(){
        init();
        application.txnmode = 'ONLINE';
        application.txntype = 'ADDLOB';
        return 'pageB';
    }
    
    def initRetire(){
        init();
        application.txnmode = 'ONLINE';
        application.txntype = 'RETIRE';
        application.txndate = new Date();
        return 'pageB';
    }
    
    def initRetireline(){
        init();
        application.txnmode = 'ONLINE';
        application.txntype = 'RETIRE_LINE';
        application.txndate = new Date();
        return 'pageB';
    }
    
    def initCaptureNew(){
        init();
        application.txnmode = 'CAPTURE';
        application.txntype = 'NEW';   
        return 'default';
    }
    
    def initCaptureRenew(){
        init();
        application.txnmode = 'CAPTURE';
        application.txntype = 'RENEW';   
        return 'default';
    }
    
    def initNew(){
        init();
        application.txnmode = 'ONLINE';
        application.txntype = 'NEW';
        application.txndate = new Date();
        return 'default';
    }
    
    def initRenew(){
        init();
        application.txnmode = 'ONLINE';
        application.txntype = 'RENEW';
        application.txndate = new Date();
        return 'pageB';
    }
    
    void init(){
        def res = enumSvc.getTypes(['applicationTypes','applicationModes']);
        typeList = res.applicationTypes;
        modeList = res.applicationModes;
    }
    
    def onselect = { entity ->
        if( entity ){
            application.info.taxpayername = entity.entityname;
            application.info.taxpayeraddress = entity.entityaddress;
            application.info.taxpayerid = entity.objid;
            application.taxpayerid = entity.objid;
        }
        binding.refresh();
    }
    
    def onbpselect = { entity ->
        if( entity ){
            app.appno = entity.appno;
            app.businessid = entity.businessid;
            app.objid = entity.objid;
            app.tradename = entity.tradename;
            app.businessaddress = entity.businessaddress;
        }
        binding.refresh();
    }
    
    def next(){
        application.parentid = app.objid;
        application.businessid = app.businessid;

        application = svc.evaluateTxnType( application );
        return InvokerUtil.lookupOpener('bp.create', [application:application]);
    }
    
    public def lookupBusiness(){
        return InvokerUtil.lookupOpener( 'bp.business_list', [onselect: onbpselect, searchText:app.appno] );
    }
    
    public def lookupPayer(){
        return InvokerUtil.lookupOpener( 'entity:lookup', [onselect: onselect, searchText:application.info.taxpayername] );
    }
}

]]>        
        
    </code>
    <pages>
        <page template="etracs2.bp.application.ApplicationInitialPageA"/>
        <page template="etracs2.bp.application.ApplicationInitialPageB" name='pageB'/>
    </pages>
</workunit>