<workunit>
    <invokers>
        <invoker type="home.action" category="Business" folderid="/menu/bp/txn" action="initApplication" caption="Approved Applications" permission="bppermit.approvedapplications" id="approvedapplications" target="window" icon="images/folder.png"/>
        <invoker type="home.action" category="Business" folderid="/menu/bp/txn" action="initReleasePermit" caption="For Release Permits" permission="bppermit.forreleasepermits" id="forreleasepermits" target="window" icon="images/folder.png"/>
        <invoker type="home.action" category="Business" folderid="/menu/bp/txn" action="initForRenewalPermit" caption="For Renewal Application" permission="bppermit.forrenewapplications" id="bppermit.forrewalapplications" target="window" icon="images/folder.png"/>
        <invoker type="home.action" category="Business" folderid="/menu/bp/txn" action="initActivePermit" caption="Active Permits" permission="bppermit.activepermits" id="activepermits" target="window" icon="images/folder.png"/>
        <invoker type="home.action" category="Business" folderid="/menu/bp/txn" caption="Retired Application" permission="bppermit.retire" id="retiredapplications" target="window" icon="images/folder.png"/>

        <invoker type="formActions" action="previewApplication" caption="View Application" visibleWhen="#{selectedItem != null}" icon="images/doc-view.png"/>
        <invoker type="formActions" action="previewAssessment" caption="View Assessment" visibleWhen="#{selectedItem != null}" icon="images/doc-view.png"/>
        <invoker type="formActions" action="open" caption="Open" visibleWhen="#{selectedItem != null}" icon="images/open.png"/>
        <invoker type="formActions" action="renew" caption="Renew" visibleWhen="#{selectedItem != null and selectedItem.docstate == 'EXPIRED' }" icon="images/open.png" permission="bplicensing.renewtransaction"/>
    </invokers>
    <code>
<![CDATA[

import com.rameses.rcp.common.*;
import com.rameses.rcp.annotations.*;
import com.rameses.osiris2.client.*;

class BusinessMgmtList
{
    @Binding
    def binding;
    
    def mode = 'VIEW';
    
    @Service('BusinessMgmtService')
    def svc;
    
    @Service('BPApplicationService')
    def appSvc;
    
    @Service('BPHtmlService')
    def htmlSvc;
    
    def txntype;
    def docstate;
    def searchText;
    
    void initApplication(){ docstate = 'APPROVED'; }
    void initReleasePermit(){ docstate = 'PERMIT_PENDING'; }
    void initActivePermit(){ docstate = 'ACTIVE'; }
    void initForRenewalPermit(){ docstate = 'EXPIRED'; }
    
    def selectedItem;
    def listHandler = [
        getRows: { return 25; },
        getColumns : {
            return [
                new Column(name:'docstate', caption:'Status'),
                new Column(name:'txnno', caption:'Application No.'),
                new Column(name:'tradename', caption:'Trade Name'),
                new Column(name:'businessaddress', caption:'Business Address' ),
                new Column(name:'taxpayername', caption:'Payer Name'),
                new Column(name:'taxpayeraddress', caption:'Payer Address')
            ];
        },
        
        fetchList : {
            return svc.getList( searchText, docstate, it );
        }
    ] as PageListModel;
    
    public def getHtml(){
        def html = "";
        if( selectedItem ) {
            if( !selectedItem.html ){
                try{ selectedItem.html = htmlSvc.getHtml( selectedItem.objid );
                }catch(e){ e.printStackTrace(); }
            }
            html = selectedItem.html;
        }
        
        if( html ) return html;
        return 'No selected item';
    }
    
    def previewApplication(){
        return InvokerUtil.lookupOpener('bp.applicationreport', [applicationid:selectedItem.objid]);
    }
    
    def previewAssessment(){
        return InvokerUtil.lookupOpener('bp.assessmentreport', [applicationid:selectedItem.objid]);
    }
    
    def retire(){ return InvokerUtil.lookupOpener('bp.retire', [applicationid: selectedItem.objid]);}
    
    def release(){
        def permit = svc.openPermit( selectedItem.objid );
        return InvokerUtil.lookupOpener('bp.releasepermit', [permit: permit]);
    }
    
    def open(){ 
        return selectedItem.txntype.matches('RETIRE|RETIRELOB') ? retire() : release(); 
    }
    
    def renew(){
        def application = [:];
        application.txnmode = 'ONLINE';
        application.txntype = 'RENEW';
        application.docstate = 'DRAFT';
        application.txndate = new Date();
        application.businessid = selectedItem.businessid;
        application.parentid = selectedItem.objid;
        return InvokerUtil.lookupOpener('bp.createInWindow', [application: appSvc.evaluateTxnType( application )]);
    }
    void search(){ listHandler.load(); }
}

]]>        
        
    </code>
    <pages>
        <page template="etracs2.bp.application.BusinessMmgtPage"/>
    </pages>
</workunit>