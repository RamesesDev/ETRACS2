<workunit>
    <invokers>
        <invoker type="bpbillingrule.copy" action="copy" caption="New Rule" target="popup" />
        <invoker type="bpbillingrule.create" action="create" caption="New Rule" target="popup" />
        <invoker type="bpbillingrule.open" action="open" caption="Rule Information" target="popup" />
        
        <invoker type="formActions" action="create" caption="New" mnemonic="n" shortcut="ctrl N" visibleWhen="#{mode == 'view' }" icon="images/doc-new.png"/>
        <invoker type="formActions" action="cancel" caption="Cancel" mnemonic="c" shortcut="ctrl C" visibleWhen="#{mode == 'edit' }" icon="images/cancel.png"/>
        <invoker type="formActions" action="edit" caption="Edit" mnemonic="e" shortcut="ctrl E" visibleWhen="#{mode == 'view' and rule.docstate != 'DEPLOYED'}" icon="images/edit.png"/>
        <invoker type="formActions" action="save" caption="Save" mnemonic="s" shortcut="ctrl S" visibleWhen="#{mode != 'view' }" icon="images/save.png"/>
        <invoker type="formActions" action="deploy" caption="Deploy" mnemonic="d" shortcut="ctrl D" visibleWhen="#{mode == 'view'  and rule.docstate != 'DEPLOYED'}" icon="images/deploy.png"/>
        <invoker type="formActions" action="undeploy" caption="Undeploy" mnemonic="u" shortcut="ctrl U" visibleWhen="#{mode == 'view'  and rule.docstate == 'DEPLOYED'}" icon="images/undeploy.png"/>
        <!--
        <invoker type="formActions" action="debug" caption="Debug" mnemonic="g" shortcut="ctrl G" icon="images/debug.png"/>
        -->
        <invoker type="formActions" action="remove" caption="Delete" mnemonic="d" shortcut="ctrl D" visibleWhen="#{rule.docstate == 'DRAFT'}" icon="images/doc-delete.png"/>
    </invokers>
    <code>
<![CDATA[
import com.rameses.rcp.annotations.*
import com.rameses.rcp.common.*
import com.rameses.osiris2.client.*

class BPBillingRuleController  extends etracs2.common.groovy.AbstractRuleController
{
    @Binding
    def binding
    
    @Service('AbstractRuleService')
    def abstractSvc 
    
    @Service('BPBillingRuleService')
    def billingSvc
    
    /*--------------------------------------------------------------
    * Abstrct Methods to be implemented
    --------------------------------------------------------------*/
    def getBinding()             { return binding }
    def getAbstractRuleService() { return abstractSvc }
    def getRuleService()         { return billingSvc }
    String getOpenerName()       { return 'bpbillingrule' }
    String getPackagename()      { return 'etracs2.bp.billing.rules' }
    String getRuleset()          { return 'bpbilling' }
    
    /*--------------------------------------------------------------*/
    

}


]]>
    </code>
    <pages>
        <page template="etracs2.common.rule.AbstractRulePage" />
    </pages>
</workunit>