<workunit>
    <invokers>
        <invoker type="bp:DRAFT" action="initView" caption="BP Application" target="window"/>
        <invoker type="bp:open" action="init" caption="BP Application"/>

        <invoker type="formActions" action="cancel" caption="Cancel" mnemonic="c" icon="images/cancel24.png" immediate="true"/>
        <invoker type="formActions" action="edit"   caption="Edit"   mnemonic="s" icon="images/edit24.png"   immediate="true"  shortcut="ctrl S" visibleWhen="#{mode == 'view'}"/>
        <invoker type="formActions" action="save"   caption="Save"   mnemonic="s" icon="images/save24.png"   shortcut="ctrl S"  visibleWhen="#{mode != 'view'}"/>
        <invoker type="formActions" action="delete" caption="Delete" mnemonic="d" icon="images/delete24.png"   immediate="true" shortcut="ctrl X" visibleWhen="#{application.txxno != null and application.docstate != 'APPROVED' }"/>
        
        <invoker type="formActions" action="submit"   caption="Submit" 
                 visibleWhen="#{application.docstate == 'DRAFT' and mode == 'view'}"/>
        <invoker type="formActions" action="assess"   caption="Assess"
                 visibleWhen="#{application.docstate == 'FOR_ASSESSMENT' and mode == 'view'}"/>
        <invoker type="formActions" action="reassess" caption="Re-Assess"
                 visibleWhen="#{application.docstate == 'FOR_APPROVAL' and mode == 'view'}"/>
    </invokers>
    <code>
<![CDATA[

import com.rameses.rcp.common.*;
import com.rameses.rcp.annotations.*;
import com.rameses.osiris2.client.*;

class BPApplication
{
    @Binding
    def binding;

    @Service('BPEnum')
    def enumSvc;
    
    @Service('BPApplicationService')
    def svc;

    def mode = 'view';
    def application;
    def organizations;
    def barangays;
    def officetypes;
    
    void init(){
        def res = enumSvc.getTypes(['organizations', 'officeTypes']);
        organizations = res.organizations;
        officetypes = res.officeTypes;
        barangays = enumSvc.barangays;
        mode = 'new';
    }
    
    void initView(){
        def res = enumSvc.getTypes(['organizations', 'officeTypes']);
        organizations = res.organizations;
        officetypes = res.officeTypes;
        barangays = enumSvc.barangays;
        mode = 'view';
    }
    
    def lob;
    def lobHandler = [
        getRows    : { return 5; },
        getColumns : {
            return [
                new Column(name:"name", caption:"Classification"),
                new Column(name:"assessmenttype", caption:"Assessment Type"),
                new Column(name:"iyear", caption:"Year"),
            ];
        },
        
        onRemoveItem : {
            if( it.assessmenttype == 'NEW' ){
                application.info.lobs.remove( it );
            }
        },
        
        fetchList : { return application.info.lobs; },
    ] as SubListModel;
    
    def onselect = { selected ->
        if(selected){
            def o = application.info.lobs.find{ it.lobid = selected.objid };
            if( o ) throw new Exception("LOB '$selected.name' is already in application list.");
            application.info.lobs.add( [lobid:selected.objid, name:selected.name, assessmenttype:'NEW'] );
            binding.refresh();
        }
    }
    
    def addLob(){
        return InvokerUtil.lookupOpener('lob.lookup', [onselect:onselect]);
    }
    
    void retireLob(){
        lob.assessmenttype = 'RETIRE';
        binding.refresh();
    }
    
    void renewLob(){
        lob.assessmenttype = 'RENEW';
        binding.refresh();
    }
    
    def cancel() {
        if( mode != 'edit' ) return '_close';
        application.putAll( old );
        binding.refresh();
        mode = 'view';
        return null;
    }

    def old = [:];
    
    void edit(){
        old.putAll( application );
        mode = 'edit';
    }
    
    void save(){
        application = svc.save( application );
        mode = 'view';
        binding.refresh();
    }
    
    def submit(){
       application = svc.submitForAssessment( application.objid );
       return InvokerUtil.lookupOpener('bp:assessment',[application:application]);
    }
}

]]>
    </code>
    <pages>
        <page template="etracs2.bp.application.ApplicationMainPage"/>
    </pages>
</workunit>