<workunit>
    <invokers>
        <invoker type="bpassessment:rulecondition"  caption="Tax Fee Account" action="init" index="90" />        
    </invokers>
    <code>
        <![CDATA[

        import com.rameses.rcp.annotations.*
        import com.rameses.rcp.common.*
        import com.rameses.osiris2.client.*

        class BPRuleConditionTaxFeeController extends rulemgmt.RuleConditionHandler
        {
            @Binding
            def binding

            @Service('BPApplicationService')
            def svc 

            def selectedItems
            def searchText
            
            public String getConditiontype() {
                return "taxfee"
            }

            public void init() {
                if( !condition.accounts ) condition.accounts = [];
            }

            void remove() {
                if( selectedItems ) {
                    selectedItems.each{ 
                        condition.accounts.remove( it ) 
                    }
                    binding.refresh('selectedItems')
                }
            }

            public void accept() {
                if( ! condition.accounts ) 
                    throw new Exception('At least one Tax Fee Account is required.')
                condition.displaytext = 'Tax Fee Account is any of the following: ' + condition.accounts.accttitle.join(', ');
            }

            List getOptions() {
                return [
                    [name:'ANY', caption:'each line of business calculated'],
                    [name:'NOT_HIGHEST', caption:'not the highest amount computed'],
                    [name:'NOT_LOWEST', caption:'not the lowest amount computed'],
                    [name:'HIGHEST', caption:'the highest amount computed'],
                    [name:'LOWEST', caption:'the lowest amount computed'],
                ]
            }

            /* -------------------------------------------
            **  Lookup support
            ------------------------------------------- */
            def onselectHandler = { account -> 
                if( ! condition.accounts.contains( account ) ){
                    condition.accounts.add( account )
                    binding.refresh('selectedItems')
                }
            }

            def lookupAccount() {
                return InvokerUtil.lookupOpener('incomeacct:lookup', [searchText:searchText, onselect:onselectHandler] )
            }

        }

        ]]>
    </code>
    <pages>
        <page template="bpassessment.rule.condition.TaxFeeConditionPage" />
    </pages>
</workunit>