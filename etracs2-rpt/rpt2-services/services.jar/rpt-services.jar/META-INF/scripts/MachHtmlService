import com.rameses.annotations.*
import groovy.text.SimpleTemplateEngine

class MachHtmlService
{
   @ProxyMethod
   def buildMachHTML(def faas) {
      def machList = []
      faas.rpu.info.machuses.each {
         machList.add(
            
               title:it.actualusename,
               cols:1,
               headers:[   
                  [name:'machinecode', caption:'Code'],
                  [name:'machinename', caption:'Machine'],
                  [name:'basemarketvalue', caption:'Base Market Value'],
                  [name:'marketvalue', caption:'Market Value'],
                  [name:'assessedvalue', caption:'Assessed Value'],
                  [name:'yearacquired', caption:'Year Acquired'],
                  [name:'yearinstalled', caption:'Year Installed'],
                  [name:'operationyear', caption:'Operation Year'],
                  [name:'estimatedlife', caption:'Estimated Life'],
                  [name:'remaininglife', caption:'Remaining Life'],
                  [name:'originalcost', caption:'Original Cost'],
                  [name:'acquisitioncost', caption:'Acquisition Cost'],
                  [name:'replacementcost', caption:'Replacement Cost'],
                  [name:'depreciation', caption:'Depreciation'],
                  [name:'depreciationvalue', caption:'Depreciation Value'],
               ],
               items:[
                  [machinecode:it.machdetails.machinecode],
                  [machinename:it.machdetails.machinename],
                  [machinename:it.machdetails.basemarketvalue],
                  [machinename:it.machdetails.marketvalue],
                  [machinename:it.machdetails.assessedvalue],
                  [machinename:it.machdetails.yearacquired],
                  [machinename:it.machdetails.yearinstalled],
                  [machinename:it.machdetails.operationyear],
                  [machinename:it.machdetails.estimatedlife],
                  [machinename:it.machdetails.remaininglife],
                  [machinename:it.machdetails.originalcost],
                  [machinename:it.machdetails.acquisitioncost],
                  [machinename:it.machdetails.replacementcost],
                  [machinename:it.machdetails.depreciation],
                  [machinename:it.machdetails.depreciationvalue],
               ],
               leftItems:'',
               data:'',
               rightItems:''
            
         )
      }
   
      def mach = [
         [
            title:'Assessment Detail',
            cols:1,
            tables:[
               [
                  title:'Machine Classifications',
                  cols:1,
                  headers:[
                     [name:'actualusecode', caption:'Code'],
                     [name:'actualusename', caption:'Actual Use'],
                     [name:'basemarketvalue', caption:'Base Market Value'],
                     [name:'marketvalue', caption:'Market Value'],
                     [name:'assesslevel', caption:'Assess Level'],
                     [name:'assessedvalue', caption:'Assessed Value'],
                  ],
                  items:[
                     [actualusecode:faas.rpu.info.machuses.actualusecode],
                     [actualusename:faas.rpu.info.machuses.actualusename],
                     [basemarketvalue:faas.rpu.info.machuses.basemarketvalue],
                     [marketvalue:faas.rpu.info.machuses.marketvalue],
                     [assesslevel:faas.rpu.info.machuses.assesslevel],
                     [assessedvalue:faas.rpu.info.machuses.assessedvalue],
                  ],
                  leftItems:'',
                  data:'',
                  rightItems:''
               ]
            ],
            items:[
               [caption:'Base Market Value', value:faas.rpu.totalbmv],
               [caption:'Market Value', value:faas.rpu.totalmv],
               [caption:'Assessed Value', value:faas.rpu.totalav],
            ]
         ]
      ]
      
      mach.tables.each {
         it.addAll(machList)
      }
      
      return mach
   }
}
