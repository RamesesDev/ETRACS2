import com.rameses.annotations.*;
import com.rameses.eserver.*;
import com.rameses.common.*;
import java.rmi.server.UID;

class StructureTemplateService{
	@PersistenceContext('main')
	def em
	
	@Service('ETRACSUtilService')
	def util
	
	@Service('LogService')
	def logService
	
	def schemaname = 'structuretemplate:structuretemplate';
	def schemaversion = '1.0';
	
	@ProxyMethod
	public def getList( searchText ) {
		if( !searchText ) return em.sqlContext.createQuery('SELECT * FROM structuretemplate').resultList;
		
		return [];
	}
	
	@ProxyMethod
	public def open(){
		def template = em.sqlContext.createQuery('SELECT objid FROM structuretemplate').singleResult;
		if( template ) return em.read( schemaname, template );
		
		return null;
	}
	
	@ProxyMethod
	public def create( template ){
		template.objid = "TEMP" + new UID();
		template.schemaname = schemaname;
		template.schemaversion = schemaversion;
		
		validate( template );
		em.create( template.schemaname, template );
		
		return template;
	}
	
	@ProxyMethod
	public def update( template ){
		validate( template );
		em.update( template.schemaname, template );
		
		return template;
	}
	
	private void validate( template ){
		def oldtemplate = em.read(template.schemaname, template);
		util.validateLastUpdate( template, oldtemplate );	
		
		em.validate( template.schemaname, template );
	}
	
	
	private def getListByQuery(namedQuery, values, params ) {
		if( ! params ) params = [ _start:0, _limit:50 ]
		return em.sqlContext.createNamedQuery( namedQuery ).setParameters(values)
					.setFirstResult( params._start )
					.setMaxResults( params._limit )
					.resultList
	}

}
