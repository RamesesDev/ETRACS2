<?xml version="1.0" encoding="UTF-8"?>
<workunit>
    <invokers>
        <invoker type="rptcertifications" caption="Multiple Property" target="window" index="2" permission1="" />
        <invoker type="multipleproperty.view"  caption="Multiple Property" index="2" action="doPreview" />
        
       <!-- default -->
        <invoker type="formActions" action="_close"     caption="Cancel"    shourtcut="c" mnemonic="c"  index="0"  visibleWhen="#{mode == '_default'}" immediate="true" icon="images/cancel.png" />
        <invoker type="formActions" action="doPreview"  caption="Preview"   shourtcut="v" mnemonic="v"  index="2"  visibleWhen="#{mode == 'certified'}" icon="images/preview.png" />
        <invoker type="formActions" action="doSave"     caption="Save"      shourtcut="s" mnemonic="s"  index="3"  visibleWhen="#{mode == '_default'}" icon="images/save.png" />
        
        <!-- print preview -->
        <invoker type="formActions" action="doClose"  caption="Close"  shortcut="ctrl c" mnemonic="c"  index="0" visibleWhen="#{mode != '_default'}" icon="images/cancel.png" />
        
    </invokers>
    <code lang="groovy">

    <![CDATA[
        import com.rameses.rcp.annotations.*
        import com.rameses.rcp.common.*
        import com.rameses.osiris2.client.*
        import com.rameses.osiris2.client.*;
        import com.rameses.osiris2.reports.*;
        
        public class RPTCertificationsMultiplePropertyController 
        {
            @Service('ReportParameterService')
            def svcParams;
        
            @Service('RPTCertificationsService')
            def svc;
        
            @Binding 
            def binding;
            
            def certification = [:];
            def list = [];
            def mode = '_default';
            def taxpayername;
            
            def getLookupEntity(){
                return InvokerUtil.lookupOpener("entity.lookup", [:] );
            }

            void setTaxpayername( o ){
                taxpayername = o;
                certification.taxpayerid = o.objid;
                certification.taxpayername = o.entityname;
                certification.requestedby = o.entityname;
                certification.taxpayerno = o.entityno;
                certification.taxpayeraddress = o.entityaddress;
                binding.refresh("certification.*");
            }
            
            public void setOfficialuse( o ){
                certification.official = o;
                certification.orno = ( o ) ? 'Official Use' : '';
                certification.ordate = ( o ) ? null : certification.serverDate;
                certification.oramount = ( o ) ? 0.0 : 0.0;
                certification.stampamount = ( o ) ? 0.0 : 0.0;
            }
            
            public def getOfficialuse(){
                return certification.official;
            }
            
            def report =[
                    getReportName : { "rpt/td/certification/MultiplePropertyCertification" },
                    getReportData : { return certification; },
                    getParameters : { svcParams.getStandardParameter( OsirisContext.env.USERNAME ); }
                ] as ServerReportModel;
          
            public def doPreview(){
                certification.putAll( svc.fetchDataMultipleProperty(certification) );
                report.viewReport();
                mode = '_default';
                
                return "preview";
            }
            
            public def doSave(){
                certification.putAll( svc.fetchDataMultipleProperty(certification) );
                svc.doSave( certification );
                mode = 'certified';
                MsgBox.alert( 'Data Successfuly Saved. ' );
            }
            
            public def doClose(){
                mode = '_default';
                certification = [:];
                taxpayername = null;
                
                return '_close';
            }
        }
    ]]>
    </code>
    
    <pages>
        <page template="etracs2.rpt.certification.RPTCertificationPage" />
        <page name="preview" template="etracs2.common.PreviewPage" />
        
    </pages>
</workunit>
