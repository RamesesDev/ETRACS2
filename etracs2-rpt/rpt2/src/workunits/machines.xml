<?xml version="1.0" encoding="UTF-8"?>
<workunit>
    
    <invoker folderid="/menu/rpt/master" action="init" caption="Machines" index="10" permission="machines.view" />
    <invoker type="rpt.master" action="init" caption="Machines" index="8" permission="machines.view" />
        
    <invoker type="formActions" action="create" shortcut="ctrl N" visibleWhen="#{mode == 'view'}" immediate="true" caption="New" mnemonic="n" icon="images/doc-new.png" permission="machines.create" />
    <invoker type="formActions" action="edit" shortcut="ctrl E" visibleWhen="#{mode == 'view' and entity.objid != null }" immediate="true" caption="Edit" mnemonic="e" icon="images/doc-edit.png" permission="machines.edit" />
    <invoker type="formActions" action="save" shortcut="ctrl S" visibleWhen="#{mode != 'view'}" caption="Save" mnemonic="s" icon="images/doc-save.png" />
    <invoker type="formActions" action="cancel" visibleWhen="#{mode != 'view'}"  immediate="true" caption="Cancel" mnemonic="c" icon="images/doc-cancel.png"/>
    <invoker type="formActions" action="delete" shortcut="ctrl D" visibleWhen="#{mode == 'view' and entity.objid != null}" immediate="true" caption="Delete" mnemonic="d" icon="images/doc-delete.png" permission="machines.delete" />
    
    <code lang="groovy">
        <![CDATA[
        
        import com.rameses.rcp.common.*;
        import com.rameses.rcp.annotations.*;
        import com.rameses.osiris2.client.*;
        import java.rmi.server.UID;
        
        public class MachinesController  extends etracs2.groovy.CRUDController  {
            @Service("MachinesService")
            def svc;

            def getService() { return svc; }
            def getCreateFocusComponent() { return "entity.machinecode"; }
            def getEditFocusComponent() { return "entity.machinecode"; }
            def getListHandler() { return listHandler; }
            
            def createEntity() {
                return [
                    economiclife    : 0,
                    residualrate    : 0.0
                ];
            }
            
            def listHandler = [
                getRows    : { return 20; },
                getColumns : {
                    return [
                        new Column(name:"machinecode", caption:"Code", minWidth:40),
                        new Column(name:"machinedesc", caption:"Description", minWidth:170),
                        new Column(name:"economiclife", caption:"Economic Life", minWidth:50),
                        new Column(name:"residualrate", caption:"Residual Rate", minWidth:50),
                    ];
                },
                fetchList : { 
                    return list; 
                },
            ] as SubListModel;
        }
        
        ]]>
    </code>
    
    <pages>
        <page template="etracs2.rpt.master.machines.MachinesPage" />
    </pages>
</workunit>
